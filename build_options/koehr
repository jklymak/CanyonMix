# ====linux_amd64_ifort+mpi_idp_kilrain=================================
#!/bin/bash
#
# $Header: /u/gcmpack/MITgcm/tools/build_options/linux_amd64_ifort+mpi_ice_nas,v 1.6 2010/10/26 19:32:04 heimbach Exp $
# $Name: checkpoint62o $

# tested on koehr using:
# module load compiler/intelmpi
# module load hdf5 netcdf
#

#mpiifort loads MPI libraries automatically
FC=mpiifort
CC=mpiicc
F90C=mpif90

DEFINES='-DALLOW_USE_MPI -DALWAYS_USE_MPI -DWORDLENGTH=4'
CPP='cpp  -traditional -P'
EXTENDED_SRC_FLAG='-132'
CFLAGS='-fPIC'
LDADD='-shared-intel'

#LIBS="-L/scr/projects/COST/netcdf-fortran/4.4.2/gnu/lib -L/scr/projects/COST/netcdf-c/4.3.3.1/gnu/lib -L/scr/projects/COST/hdf5/1.8.15/gnu/lib"
#LIBS="-L/site/applic/netcdf/4.1.3-intel/lib $HDF5LIB"
#INCLUDES="$HDF5MOD -I$MPI_HOME/include64 -I/site/applic/netcdf/4.1.3-intel/include" # -I/scr/projects/COST/netcdf-fortran/4.4.2/gnu/include
#INCLUDES="/p/app/intel/parallel_studio_xe_2019_update4/impi/2019.4.243/intel64/include"
#INCLUDEDIRS=$MPI_HOME/include64
MPIINCLUDEDIR=$I_MPI_ROOT/intel64/include

MPI_HEADER_FILES='mpif.h mpiof.h'
#MPI_HEADER_FILES_INC='./mpi_headers/mpif.h ./mpi_headers/mpiof.h'
INCLUDES="-I$MPIINCLUDEDIR"

NOOPTFLAGS='-O0 -fPIC'

if test "x$IEEE" = x ; then
    #  No need for IEEE-754
    FFLAGS="$FFLAGS -traceback -fPIC -W0 -WB -assume byterecl -align -fpe0"
    FOPTIM='-O2 -ip -xSSE4.2 -fp-model source -ftz'
    NOOPTFILES='seaice_growth.F calc_oce_mxlayer.F fizhi_lsm.F fizhi_clockstuff.F'
else
    #  Try to follow IEEE-754
    FFLAGS="$FFLAGS -traceback -fPIC -W0 -WB  -assume byterecl -noalign -fpe0"
    FOPTIM='-O0'
fi
#- might want to use '-r8' for fizhi pkg:
#FFLAGS="$FFLAGS -r8"

#- For really big executable (> 2 GB), uncomment following 2 lines
#FFLAGS="$FFLAGS -mcmodel medium -shared-intel"
#CFLAGS='-mcmodel=medium'
